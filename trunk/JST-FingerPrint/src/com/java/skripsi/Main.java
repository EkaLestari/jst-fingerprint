/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Main.java
 *
 * Created on Jun 21, 2010, 9:06:31 AM
 */
package com.java.skripsi;

import java.awt.Image;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class Main extends javax.swing.JFrame {

    /** Creates new form Main */
    public static final String DELIMITER = ":";
    private DB db;
    private JSTEngine jstEngine;
    private ImageProcessor imageProcessor;
    private File fileTmp = null;
    private DataTableModel dtm;
    private InputTableModel itm;
    private Parameter param;
    private LogForm frmLog;
    private int counterId = 0;
    List<FingerPrint> listInput;

    public Main() {
        //database
        db = new DB();
        //tabel model
        listInput = new ArrayList<FingerPrint>();
        dtm = new DataTableModel(db);
        itm = new InputTableModel(listInput);

        initComponents();
        setLocationRelativeTo(null);
        tblData.setModel(dtm);
        tblInput.setModel(itm);

        param = new Parameter();
        jstEngine = new JSTEngine();
        imageProcessor = new ImageProcessor();
        frmLog = new LogForm();
        frmLog.clearLog();

        //konfigurasi panel database
        this.txtBobotAkhir.setText(db.getBobot());

        //konfigurasi panel input
        setParameter(param);
        btSave.setEnabled(false);
        btBatal.setEnabled(false);

        //konfigurasi panel tes
        txtTesTarget.setColumns(6);
        btnClearTes.setEnabled(false);
    }

    public void setParameter(Parameter param) {
        this.txtMaxEpoch.setText(String.valueOf(param.getMaxEpoch()));
        this.txtTargetError.setText(String.valueOf(param.getTarget()));
        this.txtLR.setText(String.valueOf(param.getLearningRate()));
        this.txtJmlHiddenLayer.setText(String.valueOf(param.getNumHiddenLayer()));
        this.txtMinRandom.setText(String.valueOf(param.getMinRandom()));
        this.txtMaxRandom.setText(String.valueOf(param.getMaxRandom()));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnlInput = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtMaxEpoch = new javax.swing.JTextField();
        txtTargetError = new javax.swing.JTextField();
        txtLR = new javax.swing.JTextField();
        txtJmlHiddenLayer = new javax.swing.JTextField();
        txtMinRandom = new javax.swing.JTextField();
        txtMaxRandom = new javax.swing.JTextField();
        cbDefaultParam = new javax.swing.JCheckBox();
        jPanel8 = new javax.swing.JPanel();
        txtBrowseImage = new javax.swing.JTextField();
        btRemove = new javax.swing.JButton();
        btAdd = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        btBrowse = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        txtNama = new javax.swing.JTextField();
        btTraining = new javax.swing.JButton();
        btSave = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblInput = new javax.swing.JTable();
        btBatal = new javax.swing.JButton();
        lblProses = new javax.swing.JLabel();
        pnlDatabase = new javax.swing.JPanel();
        btnDataHapus = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();
        txtBobotAkhir = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        pnlRecognition = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtHasilRecognition = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtGambarInput = new javax.swing.JTextField();
        btnBrowseInput = new javax.swing.JButton();
        pnlGambarInput = new ImagePanel();
        btnRecognize = new javax.swing.JButton();
        pnlTes = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        txtTesBrowse = new javax.swing.JTextField();
        btnBrowseTest = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        pnlTesOri = new ImagePanel();
        pnlTesFuzzy = new ImagePanel();
        pnlTesThreshold = new ImagePanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        pnlTesThinning = new ImagePanel();
        jLabel13 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        pnlSlice1 = new ImagePanel();
        pnlSlice2 = new ImagePanel();
        pnlSlice3 = new ImagePanel();
        pnlSlice4 = new ImagePanel();
        pnlSlice5 = new ImagePanel();
        pnlSlice6 = new ImagePanel();
        pnlSlice7 = new ImagePanel();
        lblSlice1 = new javax.swing.JLabel();
        lblSlice2 = new javax.swing.JLabel();
        lblSlice3 = new javax.swing.JLabel();
        lblSlice4 = new javax.swing.JLabel();
        lblSlice5 = new javax.swing.JLabel();
        lblSlice6 = new javax.swing.JLabel();
        lblSlice7 = new javax.swing.JLabel();
        pnlSlice8 = new ImagePanel();
        pnlSlice9 = new ImagePanel();
        pnlSlice10 = new ImagePanel();
        pnlSlice11 = new ImagePanel();
        pnlSlice12 = new ImagePanel();
        pnlSlice13 = new ImagePanel();
        pnlSlice14 = new ImagePanel();
        lblSlice8 = new javax.swing.JLabel();
        lblSlice9 = new javax.swing.JLabel();
        lblSlice10 = new javax.swing.JLabel();
        lblSlice11 = new javax.swing.JLabel();
        lblSlice13 = new javax.swing.JLabel();
        lblSlice12 = new javax.swing.JLabel();
        lblSlice14 = new javax.swing.JLabel();
        pnlSlice15 = new ImagePanel();
        pnlSlice16 = new ImagePanel();
        pnlSlice17 = new ImagePanel();
        pnlSlice18 = new ImagePanel();
        pnlSlice19 = new ImagePanel();
        lblSlice15 = new javax.swing.JLabel();
        lblSlice16 = new javax.swing.JLabel();
        lblSlice17 = new javax.swing.JLabel();
        lblSlice18 = new javax.swing.JLabel();
        lblSlice19 = new javax.swing.JLabel();
        btnClearTes = new javax.swing.JButton();
        btnTesTraining = new javax.swing.JButton();
        txtTesTarget = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JST-Fuzzy FingerPrint");

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Konfigurasi Paramter"));

        jLabel4.setText("Maksimum Epoch");

        jLabel5.setText("Target Error");

        jLabel6.setText("Learning Rate");

        jLabel7.setText("Jumlah Hidden Layer");

        jLabel8.setText("Minimum Random");

        jLabel15.setText("Maksimum Random");

        txtMaxEpoch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMaxEpochFocusLost(evt);
            }
        });

        txtTargetError.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTargetErrorActionPerformed(evt);
            }
        });
        txtTargetError.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTargetErrorFocusLost(evt);
            }
        });

        txtLR.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLRFocusLost(evt);
            }
        });

        txtJmlHiddenLayer.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtJmlHiddenLayerFocusLost(evt);
            }
        });

        txtMinRandom.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMinRandomFocusLost(evt);
            }
        });

        txtMaxRandom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaxRandomActionPerformed(evt);
            }
        });
        txtMaxRandom.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMaxRandomFocusLost(evt);
            }
        });

        cbDefaultParam.setText("Use Default Parameter");
        cbDefaultParam.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                cbDefaultParamStateChanged(evt);
            }
        });
        cbDefaultParam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDefaultParamActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel15)
                    .addComponent(jLabel8))
                .addGap(27, 27, 27)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(cbDefaultParam)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtMaxRandom, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                        .addComponent(txtMinRandom, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                        .addComponent(txtJmlHiddenLayer, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                        .addComponent(txtLR, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                        .addComponent(txtTargetError, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                        .addComponent(txtMaxEpoch, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)))
                .addGap(248, 248, 248))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(cbDefaultParam)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaxEpoch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTargetError, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtJmlHiddenLayer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMinRandom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaxRandom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Input Image"));

        btRemove.setText("REMOVE");
        btRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoveActionPerformed(evt);
            }
        });

        btAdd.setText("ADD");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        jLabel16.setText("Image");

        btBrowse.setText("BROWSE");
        btBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBrowseActionPerformed(evt);
            }
        });

        jLabel17.setText("Nama");

        btTraining.setText("TRAINING PROCESS");
        btTraining.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTrainingActionPerformed(evt);
            }
        });

        btSave.setText("SIMPAN KE DATABASE");
        btSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSaveActionPerformed(evt);
            }
        });

        jLabel18.setText("Learning Set");

        tblInput.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nama", "Gambar", "Bobot Input"
            }
        ));
        jScrollPane3.setViewportView(tblInput);

        btBatal.setText("BATAL");
        btBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBatalActionPerformed(evt);
            }
        });

        lblProses.setText(" ");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(jLabel16)
                    .addComponent(jLabel18))
                .addGap(63, 63, 63)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btTraining, javax.swing.GroupLayout.DEFAULT_SIZE, 505, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addComponent(lblProses, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                        .addComponent(btRemove)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addComponent(btBatal, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btSave))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtNama, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
                            .addComponent(txtBrowseImage, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btBrowse)))
                .addContainerGap())
        );

        jPanel8Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btBatal, btSave});

        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(23, 23, 23)
                        .addComponent(jLabel18))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBrowseImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btBrowse))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btAdd)
                        .addComponent(btRemove))
                    .addComponent(lblProses))
                .addGap(13, 13, 13)
                .addComponent(btTraining)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSave)
                    .addComponent(btBatal))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlInputLayout = new javax.swing.GroupLayout(pnlInput);
        pnlInput.setLayout(pnlInputLayout);
        pnlInputLayout.setHorizontalGroup(
            pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInputLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlInputLayout.setVerticalGroup(
            pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInputLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Input & Parameter", pnlInput);

        btnDataHapus.setText("HAPUS DATA");
        btnDataHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDataHapusActionPerformed(evt);
            }
        });

        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nama", "Gambar", "Bobot"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblData);

        jLabel1.setText("Bobot Akhir");

        javax.swing.GroupLayout pnlDatabaseLayout = new javax.swing.GroupLayout(pnlDatabase);
        pnlDatabase.setLayout(pnlDatabaseLayout);
        pnlDatabaseLayout.setHorizontalGroup(
            pnlDatabaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatabaseLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDatabaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 664, Short.MAX_VALUE)
                    .addComponent(btnDataHapus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlDatabaseLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                        .addComponent(txtBobotAkhir, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlDatabaseLayout.setVerticalGroup(
            pnlDatabaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatabaseLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnDataHapus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 521, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlDatabaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBobotAkhir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(20, 20, 20))
        );

        jTabbedPane1.addTab("Database", pnlDatabase);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Hasil"));

        txtHasilRecognition.setColumns(20);
        txtHasilRecognition.setEditable(false);
        txtHasilRecognition.setRows(5);
        jScrollPane2.setViewportView(txtHasilRecognition);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 606, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Input"));

        jLabel3.setText("Gambar");

        btnBrowseInput.setText("BROWSE");
        btnBrowseInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseInputActionPerformed(evt);
            }
        });

        pnlGambarInput.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlGambarInput.setPreferredSize(new java.awt.Dimension(300, 300));

        javax.swing.GroupLayout pnlGambarInputLayout = new javax.swing.GroupLayout(pnlGambarInput);
        pnlGambarInput.setLayout(pnlGambarInputLayout);
        pnlGambarInputLayout.setHorizontalGroup(
            pnlGambarInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 265, Short.MAX_VALUE)
        );
        pnlGambarInputLayout.setVerticalGroup(
            pnlGambarInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 245, Short.MAX_VALUE)
        );

        btnRecognize.setText("RECOGNIZE");
        btnRecognize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecognizeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtGambarInput, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBrowseInput, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addComponent(pnlGambarInput, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnRecognize, javax.swing.GroupLayout.DEFAULT_SIZE, 606, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtGambarInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBrowseInput))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlGambarInput, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRecognize, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlRecognitionLayout = new javax.swing.GroupLayout(pnlRecognition);
        pnlRecognition.setLayout(pnlRecognitionLayout);
        pnlRecognitionLayout.setHorizontalGroup(
            pnlRecognitionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRecognitionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlRecognitionLayout.setVerticalGroup(
            pnlRecognitionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRecognitionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("JST Image Recognition", pnlRecognition);

        pnlTes.setMinimumSize(new java.awt.Dimension(150, 150));
        pnlTes.setPreferredSize(new java.awt.Dimension(150, 150));

        jLabel9.setText("Inputkan Gambar");

        btnBrowseTest.setText("BROWSE");
        btnBrowseTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseTestActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Pre-Proses"));

        pnlTesOri.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlTesOri.setMaximumSize(new java.awt.Dimension(150, 150));
        pnlTesOri.setMinimumSize(new java.awt.Dimension(150, 150));
        pnlTesOri.setPreferredSize(new java.awt.Dimension(150, 150));

        javax.swing.GroupLayout pnlTesOriLayout = new javax.swing.GroupLayout(pnlTesOri);
        pnlTesOri.setLayout(pnlTesOriLayout);
        pnlTesOriLayout.setHorizontalGroup(
            pnlTesOriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 148, Short.MAX_VALUE)
        );
        pnlTesOriLayout.setVerticalGroup(
            pnlTesOriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 148, Short.MAX_VALUE)
        );

        pnlTesFuzzy.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlTesFuzzy.setMaximumSize(new java.awt.Dimension(150, 150));
        pnlTesFuzzy.setMinimumSize(new java.awt.Dimension(150, 150));
        pnlTesFuzzy.setPreferredSize(new java.awt.Dimension(150, 150));

        javax.swing.GroupLayout pnlTesFuzzyLayout = new javax.swing.GroupLayout(pnlTesFuzzy);
        pnlTesFuzzy.setLayout(pnlTesFuzzyLayout);
        pnlTesFuzzyLayout.setHorizontalGroup(
            pnlTesFuzzyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 148, Short.MAX_VALUE)
        );
        pnlTesFuzzyLayout.setVerticalGroup(
            pnlTesFuzzyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 148, Short.MAX_VALUE)
        );

        pnlTesThreshold.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlTesThreshold.setMaximumSize(new java.awt.Dimension(150, 150));
        pnlTesThreshold.setMinimumSize(new java.awt.Dimension(150, 150));
        pnlTesThreshold.setPreferredSize(new java.awt.Dimension(150, 150));

        javax.swing.GroupLayout pnlTesThresholdLayout = new javax.swing.GroupLayout(pnlTesThreshold);
        pnlTesThreshold.setLayout(pnlTesThresholdLayout);
        pnlTesThresholdLayout.setHorizontalGroup(
            pnlTesThresholdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 148, Short.MAX_VALUE)
        );
        pnlTesThresholdLayout.setVerticalGroup(
            pnlTesThresholdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 148, Short.MAX_VALUE)
        );

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Original Image");
        jLabel10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Fuzzy Image");

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Threshold Image");

        pnlTesThinning.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlTesThinning.setPreferredSize(new java.awt.Dimension(150, 150));

        javax.swing.GroupLayout pnlTesThinningLayout = new javax.swing.GroupLayout(pnlTesThinning);
        pnlTesThinning.setLayout(pnlTesThinningLayout);
        pnlTesThinningLayout.setHorizontalGroup(
            pnlTesThinningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 148, Short.MAX_VALUE)
        );
        pnlTesThinningLayout.setVerticalGroup(
            pnlTesThinningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 148, Short.MAX_VALUE)
        );

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Thinning Image");
        jLabel13.setPreferredSize(new java.awt.Dimension(150, 14));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlTesOri, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlTesFuzzy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(pnlTesThreshold, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlTesThinning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(pnlTesThreshold, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnlTesFuzzy, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnlTesOri, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(pnlTesThinning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("JST Process"));

        pnlSlice1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout pnlSlice1Layout = new javax.swing.GroupLayout(pnlSlice1);
        pnlSlice1.setLayout(pnlSlice1Layout);
        pnlSlice1Layout.setHorizontalGroup(
            pnlSlice1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );
        pnlSlice1Layout.setVerticalGroup(
            pnlSlice1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );

        pnlSlice2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlSlice2.setPreferredSize(new java.awt.Dimension(75, 75));

        javax.swing.GroupLayout pnlSlice2Layout = new javax.swing.GroupLayout(pnlSlice2);
        pnlSlice2.setLayout(pnlSlice2Layout);
        pnlSlice2Layout.setHorizontalGroup(
            pnlSlice2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );
        pnlSlice2Layout.setVerticalGroup(
            pnlSlice2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );

        pnlSlice3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlSlice3.setPreferredSize(new java.awt.Dimension(75, 75));

        javax.swing.GroupLayout pnlSlice3Layout = new javax.swing.GroupLayout(pnlSlice3);
        pnlSlice3.setLayout(pnlSlice3Layout);
        pnlSlice3Layout.setHorizontalGroup(
            pnlSlice3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );
        pnlSlice3Layout.setVerticalGroup(
            pnlSlice3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );

        pnlSlice4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlSlice4.setPreferredSize(new java.awt.Dimension(75, 75));

        javax.swing.GroupLayout pnlSlice4Layout = new javax.swing.GroupLayout(pnlSlice4);
        pnlSlice4.setLayout(pnlSlice4Layout);
        pnlSlice4Layout.setHorizontalGroup(
            pnlSlice4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );
        pnlSlice4Layout.setVerticalGroup(
            pnlSlice4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );

        pnlSlice5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlSlice5.setPreferredSize(new java.awt.Dimension(75, 75));

        javax.swing.GroupLayout pnlSlice5Layout = new javax.swing.GroupLayout(pnlSlice5);
        pnlSlice5.setLayout(pnlSlice5Layout);
        pnlSlice5Layout.setHorizontalGroup(
            pnlSlice5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );
        pnlSlice5Layout.setVerticalGroup(
            pnlSlice5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );

        pnlSlice6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlSlice6.setPreferredSize(new java.awt.Dimension(75, 75));

        javax.swing.GroupLayout pnlSlice6Layout = new javax.swing.GroupLayout(pnlSlice6);
        pnlSlice6.setLayout(pnlSlice6Layout);
        pnlSlice6Layout.setHorizontalGroup(
            pnlSlice6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );
        pnlSlice6Layout.setVerticalGroup(
            pnlSlice6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );

        pnlSlice7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlSlice7.setPreferredSize(new java.awt.Dimension(75, 75));

        javax.swing.GroupLayout pnlSlice7Layout = new javax.swing.GroupLayout(pnlSlice7);
        pnlSlice7.setLayout(pnlSlice7Layout);
        pnlSlice7Layout.setHorizontalGroup(
            pnlSlice7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );
        pnlSlice7Layout.setVerticalGroup(
            pnlSlice7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );

        lblSlice1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSlice1.setText("1");
        lblSlice1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblSlice1.setPreferredSize(new java.awt.Dimension(75, 14));

        lblSlice2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSlice2.setText("2");
        lblSlice2.setPreferredSize(new java.awt.Dimension(75, 14));

        lblSlice3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSlice3.setText("3");
        lblSlice3.setPreferredSize(new java.awt.Dimension(75, 14));

        lblSlice4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSlice4.setText("4");
        lblSlice4.setPreferredSize(new java.awt.Dimension(75, 14));

        lblSlice5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSlice5.setText("5");
        lblSlice5.setPreferredSize(new java.awt.Dimension(75, 14));

        lblSlice6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSlice6.setText("6");
        lblSlice6.setPreferredSize(new java.awt.Dimension(75, 14));

        lblSlice7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSlice7.setText("7");
        lblSlice7.setPreferredSize(new java.awt.Dimension(75, 14));

        pnlSlice8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout pnlSlice8Layout = new javax.swing.GroupLayout(pnlSlice8);
        pnlSlice8.setLayout(pnlSlice8Layout);
        pnlSlice8Layout.setHorizontalGroup(
            pnlSlice8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );
        pnlSlice8Layout.setVerticalGroup(
            pnlSlice8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );

        pnlSlice9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout pnlSlice9Layout = new javax.swing.GroupLayout(pnlSlice9);
        pnlSlice9.setLayout(pnlSlice9Layout);
        pnlSlice9Layout.setHorizontalGroup(
            pnlSlice9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );
        pnlSlice9Layout.setVerticalGroup(
            pnlSlice9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );

        pnlSlice10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlSlice10.setPreferredSize(new java.awt.Dimension(75, 75));

        javax.swing.GroupLayout pnlSlice10Layout = new javax.swing.GroupLayout(pnlSlice10);
        pnlSlice10.setLayout(pnlSlice10Layout);
        pnlSlice10Layout.setHorizontalGroup(
            pnlSlice10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );
        pnlSlice10Layout.setVerticalGroup(
            pnlSlice10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );

        pnlSlice11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlSlice11.setPreferredSize(new java.awt.Dimension(75, 75));

        javax.swing.GroupLayout pnlSlice11Layout = new javax.swing.GroupLayout(pnlSlice11);
        pnlSlice11.setLayout(pnlSlice11Layout);
        pnlSlice11Layout.setHorizontalGroup(
            pnlSlice11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );
        pnlSlice11Layout.setVerticalGroup(
            pnlSlice11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );

        pnlSlice12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlSlice12.setPreferredSize(new java.awt.Dimension(75, 75));

        javax.swing.GroupLayout pnlSlice12Layout = new javax.swing.GroupLayout(pnlSlice12);
        pnlSlice12.setLayout(pnlSlice12Layout);
        pnlSlice12Layout.setHorizontalGroup(
            pnlSlice12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );
        pnlSlice12Layout.setVerticalGroup(
            pnlSlice12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );

        pnlSlice13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlSlice13.setPreferredSize(new java.awt.Dimension(75, 75));

        javax.swing.GroupLayout pnlSlice13Layout = new javax.swing.GroupLayout(pnlSlice13);
        pnlSlice13.setLayout(pnlSlice13Layout);
        pnlSlice13Layout.setHorizontalGroup(
            pnlSlice13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );
        pnlSlice13Layout.setVerticalGroup(
            pnlSlice13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );

        pnlSlice14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlSlice14.setPreferredSize(new java.awt.Dimension(75, 75));

        javax.swing.GroupLayout pnlSlice14Layout = new javax.swing.GroupLayout(pnlSlice14);
        pnlSlice14.setLayout(pnlSlice14Layout);
        pnlSlice14Layout.setHorizontalGroup(
            pnlSlice14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );
        pnlSlice14Layout.setVerticalGroup(
            pnlSlice14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );

        lblSlice8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSlice8.setText("8");
        lblSlice8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblSlice8.setPreferredSize(new java.awt.Dimension(75, 14));

        lblSlice9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSlice9.setText("9");
        lblSlice9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblSlice9.setPreferredSize(new java.awt.Dimension(75, 14));

        lblSlice10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSlice10.setText("10");
        lblSlice10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblSlice10.setPreferredSize(new java.awt.Dimension(75, 14));

        lblSlice11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSlice11.setText("11");
        lblSlice11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblSlice11.setPreferredSize(new java.awt.Dimension(75, 14));

        lblSlice13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSlice13.setText("13");
        lblSlice13.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblSlice13.setPreferredSize(new java.awt.Dimension(75, 14));

        lblSlice12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSlice12.setText("12");
        lblSlice12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblSlice12.setPreferredSize(new java.awt.Dimension(75, 14));

        lblSlice14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSlice14.setText("14");
        lblSlice14.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblSlice14.setPreferredSize(new java.awt.Dimension(75, 14));

        pnlSlice15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout pnlSlice15Layout = new javax.swing.GroupLayout(pnlSlice15);
        pnlSlice15.setLayout(pnlSlice15Layout);
        pnlSlice15Layout.setHorizontalGroup(
            pnlSlice15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );
        pnlSlice15Layout.setVerticalGroup(
            pnlSlice15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );

        pnlSlice16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout pnlSlice16Layout = new javax.swing.GroupLayout(pnlSlice16);
        pnlSlice16.setLayout(pnlSlice16Layout);
        pnlSlice16Layout.setHorizontalGroup(
            pnlSlice16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );
        pnlSlice16Layout.setVerticalGroup(
            pnlSlice16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );

        pnlSlice17.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout pnlSlice17Layout = new javax.swing.GroupLayout(pnlSlice17);
        pnlSlice17.setLayout(pnlSlice17Layout);
        pnlSlice17Layout.setHorizontalGroup(
            pnlSlice17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );
        pnlSlice17Layout.setVerticalGroup(
            pnlSlice17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );

        pnlSlice18.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout pnlSlice18Layout = new javax.swing.GroupLayout(pnlSlice18);
        pnlSlice18.setLayout(pnlSlice18Layout);
        pnlSlice18Layout.setHorizontalGroup(
            pnlSlice18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );
        pnlSlice18Layout.setVerticalGroup(
            pnlSlice18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );

        pnlSlice19.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout pnlSlice19Layout = new javax.swing.GroupLayout(pnlSlice19);
        pnlSlice19.setLayout(pnlSlice19Layout);
        pnlSlice19Layout.setHorizontalGroup(
            pnlSlice19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );
        pnlSlice19Layout.setVerticalGroup(
            pnlSlice19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );

        lblSlice15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSlice15.setText("15");
        lblSlice15.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblSlice15.setPreferredSize(new java.awt.Dimension(75, 14));

        lblSlice16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSlice16.setText("16");
        lblSlice16.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblSlice16.setPreferredSize(new java.awt.Dimension(75, 14));

        lblSlice17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSlice17.setText("17");
        lblSlice17.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblSlice17.setPreferredSize(new java.awt.Dimension(75, 14));

        lblSlice18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSlice18.setText("18");
        lblSlice18.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblSlice18.setPreferredSize(new java.awt.Dimension(75, 14));

        lblSlice19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSlice19.setText("19");
        lblSlice19.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblSlice19.setPreferredSize(new java.awt.Dimension(75, 14));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblSlice1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnlSlice1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblSlice2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnlSlice2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblSlice3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnlSlice3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblSlice4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnlSlice4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblSlice5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnlSlice5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblSlice6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnlSlice6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblSlice7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnlSlice7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                                .addComponent(lblSlice8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblSlice9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblSlice10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblSlice11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblSlice12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblSlice13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                                .addComponent(pnlSlice8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pnlSlice9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pnlSlice10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pnlSlice11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pnlSlice12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pnlSlice13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSlice14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnlSlice14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(pnlSlice15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlSlice16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlSlice17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlSlice18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlSlice19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(lblSlice15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblSlice16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblSlice17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblSlice18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblSlice19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(73, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlSlice7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlSlice6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlSlice5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlSlice4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(pnlSlice2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnlSlice1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnlSlice3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSlice1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSlice2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSlice3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSlice4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSlice5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSlice6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSlice7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlSlice14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlSlice13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlSlice12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlSlice11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlSlice10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(pnlSlice8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSlice8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSlice9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSlice10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSlice11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSlice13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSlice12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSlice14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(pnlSlice9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlSlice15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlSlice16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlSlice17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlSlice18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlSlice19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSlice15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSlice16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSlice17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSlice18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSlice19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(265, 265, 265))
        );

        btnClearTes.setText("CLEAR");
        btnClearTes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearTesActionPerformed(evt);
            }
        });

        btnTesTraining.setText("TRAINING JST");
        btnTesTraining.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTesTrainingActionPerformed(evt);
            }
        });

        txtTesTarget.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTesTargetFocusLost(evt);
            }
        });

        jLabel19.setText("Target (6 digit biner)");

        javax.swing.GroupLayout pnlTesLayout = new javax.swing.GroupLayout(pnlTes);
        pnlTes.setLayout(pnlTesLayout);
        pnlTesLayout.setHorizontalGroup(
            pnlTesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlTesLayout.createSequentialGroup()
                        .addGroup(pnlTesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(14, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTesLayout.createSequentialGroup()
                        .addGroup(pnlTesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel19))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlTesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtTesTarget, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                            .addComponent(txtTesBrowse, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBrowseTest)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTesTraining)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClearTes, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(130, 130, 130))))
        );
        pnlTesLayout.setVerticalGroup(
            pnlTesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtTesBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClearTes)
                    .addComponent(btnTesTraining)
                    .addComponent(btnBrowseTest))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlTesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTesTarget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Tes Proses", pnlTes);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 689, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 647, Short.MAX_VALUE)
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("Image Databases");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBrowseInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseInputActionPerformed
        JFileChooser jfc = new JFileChooser(new File("images"));
        jfc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        jfc.showOpenDialog(this);

        try {
            if (jfc.getSelectedFile() != null) {
                txtGambarInput.setText(jfc.getSelectedFile().getAbsolutePath());
                Image image = Toolkit.getDefaultToolkit().getImage(jfc.getSelectedFile().toURI().toURL());
                ((ImagePanel) pnlGambarInput).setImage(image);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnBrowseInputActionPerformed

    private void refreshTableData() {
        dtm = new DataTableModel(db);
        this.tblData.setModel(dtm);
    }

    private void refreshTableInput() {
        itm = new InputTableModel(listInput);
        this.tblInput.setModel(itm);
    }

    private void btnDataHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDataHapusActionPerformed
        if (tblData.getSelectedRow() != -1) {
            FingerPrint fp = dtm.list.get(tblData.getSelectedRow());
            db.deleteData(fp.getId());
            refreshTableData();
        } else {
            showAlert("Seleksi data terlebih dahulu", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnDataHapusActionPerformed

    private void tblDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDataMouseClicked
    }//GEN-LAST:event_tblDataMouseClicked

    private void btnRecognizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecognizeActionPerformed
        if (((ImagePanel) pnlGambarInput).getImage() == null || this.txtGambarInput.getText().trim().isEmpty()) {
            showAlert("Inputan tidak valid", JOptionPane.WARNING_MESSAGE);
            return;
        }
        boolean isMatch = false;
        FingerPrint fp=null;
        this.txtHasilRecognition.setText("");
        Image image = ((ImagePanel) pnlGambarInput).getImage();
        BufferedImage bi = ImageUtil.ImageToBufferedImage(image, this);
        //fuzzy enhancement
        FuzzyEnhancementInt f = new FuzzyEnhancementInt(bi);
        f.processEnhancement();
        bi = f.getEnhancementImage();

        //threshold
        Thresholder thresholder = new Thresholder(bi);

        //thinning
        Thinner thinner = new Thinner(bi);

        //jadikan gambar menjadi grayscale
        int[][] data = ImageUtil.ImageToBiner(thinner.getResult());

        //slice menjadi 19 bagian
        double[] input = imageProcessor.divideImageArray(data);

        //menghitung satu per satu kecocokan sidik jari dengan data di database
        ArrayList<FingerPrint> list = db.getData();
        for (int i = 0; i < list.size(); i++) {
            fp = list.get(i);
            double[] target = Converter.stringToArrayDouble(Converter.decimalToBinary(fp.getId(), 6));

            jstEngine.setBobotRecognize(db.getBobot(), DELIMITER, 19, 6);
            double[] hasil = jstEngine.recognizeJST(input);
            //tulis report proses
            txtHasilRecognition.setText(txtHasilRecognition.getText() + jstEngine.getLog());
            // bulatkan nilai ke atas/ke bawah
            hasil = jstEngine.round(hasil);
            if (jstEngine.match(target, hasil)) {
                isMatch = true;
                break;
            }
        }
        if (isMatch) {
            txtHasilRecognition.setText(txtHasilRecognition.getText()
                    + "\nSidik jari teridentifikasi sebagai:"
                    + "\n-ID:" + fp.getId() + "\n-Nama:" + fp.getNama());
            showAlert("Sidik jari teridentifikasi", JOptionPane.INFORMATION_MESSAGE);
        } else {
            txtHasilRecognition.setText(txtHasilRecognition.getText() + "\nSidik jari tidak teridentifikasi");
            showAlert("Sidik jari tidak teridentifikasi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnRecognizeActionPerformed

    private void btnBrowseTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseTestActionPerformed
        JFileChooser jfc = new JFileChooser(new File("images"));
        jfc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        jfc.showOpenDialog(this);

        try {
            if (jfc.getSelectedFile() != null) {
                txtTesBrowse.setText(jfc.getSelectedFile().getAbsolutePath());
                Image image = Toolkit.getDefaultToolkit().getImage(jfc.getSelectedFile().toURI().toURL());
                ((ImagePanel) pnlTesOri).setImage(image);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnBrowseTestActionPerformed

    private void btnTesTrainingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTesTrainingActionPerformed
        if (((ImagePanel) pnlTesOri).getImage() != null && this.txtTesTarget.getText().length() != 6) {
            showAlert("Input tidak valid", JOptionPane.WARNING_MESSAGE);
            return;
        }
        //siapkan form untuk log
        frmLog.clearLog();
        //ambil image dan ubah ke BufferedImage dari file yg diseleksi
        Image imgTes = ((ImagePanel) pnlTesOri).getImage();
        BufferedImage bis = ImageUtil.ImageToBufferedImage(imgTes, this);

        //fuzzy enhancement
        FuzzyEnhancementInt f = new FuzzyEnhancementInt(bis);
        f.processEnhancement();
        bis = f.getEnhancementImage();
        ((ImagePanel) pnlTesFuzzy).setImage(bis);

        //threshold
        Thresholder thresholder = new Thresholder(bis);
        ((ImagePanel) pnlTesThreshold).setImage(thresholder.getResult());

        //thinning
        Thinner thinner = new Thinner(bis);
        ((ImagePanel) pnlTesThinning).setImage(thinner.getResult());

        //jadikan gambar menjadi grayscale
        int[][] data = ImageUtil.ImageToBiner(thinner.getResult());

        //slice menjadi 19 bagian
        double[] input = imageProcessor.divideImageArray(data);

        //gambar potongan gambar ke tiap2 panel image
        ArrayList<int[][]> listArrImg = imageProcessor.getListArrayImage();
        BufferedImage[] biSliceImg = new BufferedImage[listArrImg.size()];
        for (int i = 0; i < listArrImg.size(); i++) {
            biSliceImg[i] = ImageUtil.arrayToBufferedImage(listArrImg.get(i));
        }
        ((ImagePanel) pnlSlice1).setImage(biSliceImg[0]);
        ((ImagePanel) pnlSlice2).setImage(biSliceImg[1]);
        ((ImagePanel) pnlSlice3).setImage(biSliceImg[2]);
        ((ImagePanel) pnlSlice4).setImage(biSliceImg[3]);
        ((ImagePanel) pnlSlice5).setImage(biSliceImg[4]);
        ((ImagePanel) pnlSlice6).setImage(biSliceImg[5]);
        ((ImagePanel) pnlSlice7).setImage(biSliceImg[6]);
        ((ImagePanel) pnlSlice8).setImage(biSliceImg[7]);
        ((ImagePanel) pnlSlice9).setImage(biSliceImg[8]);
        ((ImagePanel) pnlSlice10).setImage(biSliceImg[9]);
        ((ImagePanel) pnlSlice11).setImage(biSliceImg[10]);
        ((ImagePanel) pnlSlice12).setImage(biSliceImg[11]);
        ((ImagePanel) pnlSlice13).setImage(biSliceImg[12]);
        ((ImagePanel) pnlSlice14).setImage(biSliceImg[13]);
        ((ImagePanel) pnlSlice15).setImage(biSliceImg[14]);
        ((ImagePanel) pnlSlice16).setImage(biSliceImg[15]);
        ((ImagePanel) pnlSlice17).setImage(biSliceImg[16]);
        ((ImagePanel) pnlSlice18).setImage(biSliceImg[17]);
        ((ImagePanel) pnlSlice19).setImage(biSliceImg[18]);

        //ubah input menjadi array 2 dimensi -> cocok untuk kebutuhan sistem
        double[][] inputs = {input};
        //konversi target dari string menjadi array double
        double[] target = Converter.stringToArrayDouble(this.txtTesTarget.getText().trim());
        //ubah target menjadi array 2 dimensi -> cocok untuk kebutuhan sistem
        double[][] targets = {target};

        jstEngine.setParameter(
                inputs, // data input
                targets, // data target
                Double.parseDouble(this.txtLR.getText()), // learning rate
                Double.parseDouble(this.txtTargetError.getText()), // target error
                Integer.parseInt(this.txtMaxEpoch.getText()), // max epoch
                19, // jml input
                Integer.parseInt(this.txtJmlHiddenLayer.getText()), // jml hidden
                6, // jml output
                Double.parseDouble(this.txtMinRandom.getText()), // min random
                Double.parseDouble(this.txtMaxRandom.getText()));       //max random
        jstEngine.trainingJST();
        frmLog.setLog(jstEngine);
        frmLog.setVisible(true);
        this.btnClearTes.setEnabled(true);
    }//GEN-LAST:event_btnTesTrainingActionPerformed

    private void btnClearTesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearTesActionPerformed
        this.txtTesBrowse.setText("");
        this.txtTesTarget.setText("");
        ((ImagePanel) pnlTesOri).setImage(null);
        ((ImagePanel) pnlTesFuzzy).setImage(null);
        ((ImagePanel) pnlTesThreshold).setImage(null);
        ((ImagePanel) pnlTesThinning).setImage(null);
        ((ImagePanel) pnlSlice1).setImage(null);
        ((ImagePanel) pnlSlice2).setImage(null);
        ((ImagePanel) pnlSlice3).setImage(null);
        ((ImagePanel) pnlSlice4).setImage(null);
        ((ImagePanel) pnlSlice5).setImage(null);
        ((ImagePanel) pnlSlice6).setImage(null);
        ((ImagePanel) pnlSlice7).setImage(null);
        ((ImagePanel) pnlSlice8).setImage(null);
        ((ImagePanel) pnlSlice9).setImage(null);
        ((ImagePanel) pnlSlice10).setImage(null);
        ((ImagePanel) pnlSlice11).setImage(null);
        ((ImagePanel) pnlSlice12).setImage(null);
        ((ImagePanel) pnlSlice13).setImage(null);
        ((ImagePanel) pnlSlice14).setImage(null);
        ((ImagePanel) pnlSlice15).setImage(null);
        ((ImagePanel) pnlSlice16).setImage(null);
        ((ImagePanel) pnlSlice17).setImage(null);
        ((ImagePanel) pnlSlice18).setImage(null);
        ((ImagePanel) pnlSlice19).setImage(null);
        this.btnClearTes.setEnabled(false);
    }//GEN-LAST:event_btnClearTesActionPerformed

    private void txtTargetErrorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTargetErrorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTargetErrorActionPerformed

    private void txtMaxRandomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaxRandomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaxRandomActionPerformed

    private void cbDefaultParamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDefaultParamActionPerformed
    }//GEN-LAST:event_cbDefaultParamActionPerformed

    /**
     * check box untuk mengeset default parameter
     * @param evt
     */
    private void cbDefaultParamStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_cbDefaultParamStateChanged
        boolean enable = this.cbDefaultParam.isSelected();
        if (enable) {
            param.setToDefault();
            setParameter(param);
        }
        this.txtMaxEpoch.setEnabled(!enable);
        this.txtTargetError.setEnabled(!enable);
        this.txtLR.setEnabled(!enable);
        this.txtJmlHiddenLayer.setEnabled(!enable);
        this.txtMinRandom.setEnabled(!enable);
        this.txtMaxRandom.setEnabled(!enable);
    }//GEN-LAST:event_cbDefaultParamStateChanged

    /**
     * Browse gambar untuk menentukan gambar inputan
     * @param evt
     */
    private void btBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBrowseActionPerformed
        JFileChooser jfc = new JFileChooser(new File("images"));
        jfc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        jfc.showOpenDialog(this);

        if (jfc.getSelectedFile() != null) {
            txtBrowseImage.setText(jfc.getSelectedFile().getAbsolutePath());
            fileTmp = jfc.getSelectedFile();
        }
    }//GEN-LAST:event_btBrowseActionPerformed

    /**
     * tambah gambar ke dalam listFileTmp
     * @param evt
     */
    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
        if (fileTmp == null || this.txtBrowseImage.getText().isEmpty()) {
            showAlert("Image harus tersedia", JOptionPane.WARNING_MESSAGE);
            return;
        } else if (this.txtNama.getText().isEmpty()) {
            showAlert("Nama harus diisi", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            // ambil data gambar
            BufferedImage bi = null;
            try {
                bi = ImageIO.read(fileTmp);
            } catch (IOException ex) {
                ex.printStackTrace();
            }

            // lakukan fuzzy
            FuzzyEnhancementInt f = new FuzzyEnhancementInt(bi);
            f.processEnhancement();
            bi = f.getEnhancementImage();

            //threshold
            Thresholder thresholder = new Thresholder(bi);

            //thinning
            Thinner thinner = new Thinner(bi);

            //jadikan gambar menjadi grayscale
            int[][] data = ImageUtil.ImageToBiner(thinner.getResult());

            // potong2 gambar menjadi 19 bagian
            double[] tmpX = imageProcessor.divideImageArray(data);
            String strInput = "";
            //set input string dg format input[0]:input[1]:dst...
            Converter.setFraction(2);
            for (int j = 0; j < tmpX.length; j++) {
                strInput += j != tmpX.length - 1 ? Converter.formatString(tmpX[j]) + DELIMITER : Converter.formatString(tmpX[j]);
            }

            int newId = counterId == 0 ? db.getNewId() : (db.getNewId() + counterId);
            FingerPrint fp = new FingerPrint();
            fp.setId(newId);
            fp.setNama(this.txtNama.getText().trim());
            fp.setImage(ImageUtil.fileToByteArray(fileTmp));
            fp.setBobot(strInput);
            listInput.add(fp);
            refreshTableInput();
            counterId++;

            this.txtBrowseImage.setText("");
            this.txtNama.setText("");
            fileTmp = null;
        }
    }//GEN-LAST:event_btAddActionPerformed

    /**
     * hapus gambar dari listFileTmp
     * @param evt
     */
    private void btRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoveActionPerformed
        if (listInput.size() != 0) {
            listInput.remove(tblInput.getSelectedRow());
            refreshTableInput();
            counterId--;
        }
    }//GEN-LAST:event_btRemoveActionPerformed

    /**
     * tahap pelatihan jst. memasukkan gambar sebagai training set dan menghasilkan bobot.
     * @param evt
     */
    private void btTrainingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTrainingActionPerformed
        if (listInput.size() <= 0) {
            showAlert("Inputan tidak valid\nTambahkan data terlebih dahulu", JOptionPane.WARNING_MESSAGE);
            return;
        }
        //siapkan form log
        frmLog.clearLog();
        //tentukan jumlah learning set
        int jmlLearningSet = listInput.size();

        //proses persiapan input dan target
        double[][] target = new double[jmlLearningSet][6];
        double[][] xInput = new double[jmlLearningSet][19];
        double[] xTemp;
        if (jmlLearningSet > 0) {
            FingerPrint fp;
            for (int i = 0; i < jmlLearningSet; i++) {
                xTemp = new double[19];
                fp = listInput.get(i);
                // persiapkan target berupa angka biner. bersifat unik, didapatkan dari id max di database ditambah 1
                String targetBiner = Converter.decimalToBinary(fp.getId(), 6);
                double[] tmpTarget = Converter.stringToArrayDouble(targetBiner);
                //membentuk input menjadi array 2 dimensi
                String[] strInput = fp.getBobot().split(DELIMITER);
                for (int j = 0; j < strInput.length; j++) {
                    xTemp[j] = Double.parseDouble(strInput[j]);
                }
                xInput[i] = xTemp;
                //membentuk target menjadi array 2 dimensi
                target[i] = tmpTarget;
            }

            //lakukan training berdasar parameter, input dan target yg telah dihitung sebelumnya
            jstEngine.setParameter(
                    xInput, // data input
                    target, // data target
                    Float.parseFloat(this.txtLR.getText()), // learning rate
                    Float.parseFloat(this.txtTargetError.getText()), // target error
                    Integer.parseInt(this.txtMaxEpoch.getText()), // max epoch
                    19, // jml input
                    Integer.parseInt(this.txtJmlHiddenLayer.getText()), // jml hidden
                    6, // jml output
                    Float.parseFloat(this.txtMinRandom.getText()), // min random
                    Float.parseFloat(this.txtMaxRandom.getText()));       //max random
            jstEngine.trainingJST();
            frmLog.setLog(jstEngine);
            frmLog.setVisible(true);
            this.btAdd.setEnabled(false);
            this.btRemove.setEnabled(false);
            this.btSave.setEnabled(true);
            this.btBatal.setEnabled(true);
        }
    }//GEN-LAST:event_btTrainingActionPerformed

    private void btSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSaveActionPerformed
        FingerPrint fp;
        for (int i = 0; i < listInput.size(); i++) {
            fp = listInput.get(i);
            db.insertData(fp);
        }
        db.updateBobotData(jstEngine.getBobot(DELIMITER));
        for (int i = listInput.size()-1; i >=0; i--) {
            listInput.remove(i);
        }
        this.txtNama.setText("");
        this.btAdd.setEnabled(true);
        this.btRemove.setEnabled(true);
        this.btSave.setEnabled(false);
        this.btBatal.setEnabled(false);
        this.txtBobotAkhir.setText(jstEngine.getBobot(DELIMITER));
        refreshTableInput();
        counterId = 0;
    }//GEN-LAST:event_btSaveActionPerformed

    private void txtMaxEpochFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaxEpochFocusLost
        if (this.txtMaxEpoch.getText().isEmpty()) {
            showAlert("Maksimum Epoch harus diisi", JOptionPane.WARNING_MESSAGE);
            this.txtMaxEpoch.setText(String.valueOf(param.getMaxEpoch()));
        } else if (Integer.parseInt(this.txtMaxEpoch.getText()) < 10) {
            showAlert("Maksimum Epoch harus lebih dari 10", JOptionPane.WARNING_MESSAGE);
            this.txtMaxEpoch.setText(String.valueOf(param.getMaxEpoch()));
        }
    }//GEN-LAST:event_txtMaxEpochFocusLost

    private void txtTargetErrorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTargetErrorFocusLost
        if (this.txtTargetError.getText().isEmpty()) {
            showAlert("Target Error harus diisi", JOptionPane.WARNING_MESSAGE);
            this.txtTargetError.setText(String.valueOf(param.getTarget()));
        } else if (Double.parseDouble(this.txtTargetError.getText()) > 0.1) {
            showAlert("Target Error harus kurang dari 0.1", JOptionPane.WARNING_MESSAGE);
            this.txtTargetError.setText(String.valueOf(param.getTarget()));
        }
    }//GEN-LAST:event_txtTargetErrorFocusLost

    private void txtLRFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLRFocusLost
        if (this.txtLR.getText().isEmpty()) {
            showAlert("Learning Rate harus diisi", JOptionPane.WARNING_MESSAGE);
            this.txtLR.setText(String.valueOf(param.getLearningRate()));
        } else if (Double.parseDouble(this.txtLR.getText()) < 0.1 || Double.parseDouble(this.txtLR.getText()) > 1) {
            showAlert("Learning Rate harus bernilai antara 0.1 hingga 1", JOptionPane.WARNING_MESSAGE);
            this.txtLR.setText(String.valueOf(param.getLearningRate()));
        }
    }//GEN-LAST:event_txtLRFocusLost

    private void txtJmlHiddenLayerFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtJmlHiddenLayerFocusLost
        if (this.txtJmlHiddenLayer.getText().isEmpty()) {
            showAlert("Hidden Layer harus diisi", JOptionPane.WARNING_MESSAGE);
            this.txtJmlHiddenLayer.setText(String.valueOf(param.getNumHiddenLayer()));
        } else if (Integer.parseInt(this.txtJmlHiddenLayer.getText()) < 6) {
            showAlert("Hidden Layer harus bernilai lebih dari 6", JOptionPane.WARNING_MESSAGE);
            this.txtJmlHiddenLayer.setText(String.valueOf(param.getNumHiddenLayer()));
        }
    }//GEN-LAST:event_txtJmlHiddenLayerFocusLost

    private void txtMinRandomFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMinRandomFocusLost
        if (this.txtMinRandom.getText().isEmpty()) {
            showAlert("Minimum Random harus diisi", JOptionPane.WARNING_MESSAGE);
            this.txtMinRandom.setText(String.valueOf(param.getMinRandom()));
        } else if (Double.parseDouble(this.txtMinRandom.getText()) < 0.1 || Double.parseDouble(this.txtMinRandom.getText()) > 1) {
            showAlert("Minimum Random harus bernilai antara 0.1 - 1", JOptionPane.WARNING_MESSAGE);
            this.txtMinRandom.setText(String.valueOf(param.getMinRandom()));
        } else if (Double.parseDouble(this.txtMaxRandom.getText()) < Double.parseDouble(this.txtMinRandom.getText())) {
            showAlert("Minimum Random harus lebih kecil daripada Maksimum Random", JOptionPane.WARNING_MESSAGE);
            this.txtMinRandom.setText(String.valueOf(param.getMinRandom()));
            this.txtMaxRandom.setText(String.valueOf(param.getMaxRandom()));
        }
    }//GEN-LAST:event_txtMinRandomFocusLost

    private void txtMaxRandomFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaxRandomFocusLost
        if (this.txtMaxRandom.getText().isEmpty()) {
            showAlert("Maksimum Random harus diisi", JOptionPane.WARNING_MESSAGE);
            this.txtMaxRandom.setText(String.valueOf(param.getMaxRandom()));
        } else if (Double.parseDouble(this.txtMaxRandom.getText()) < 0.1 || Double.parseDouble(this.txtMaxRandom.getText()) > 1) {
            showAlert("Maksimum Random harus bernilai antara 0.1 - 1", JOptionPane.WARNING_MESSAGE);
            this.txtMaxRandom.setText(String.valueOf(param.getMaxRandom()));
        } else if (Double.parseDouble(this.txtMaxRandom.getText()) < Double.parseDouble(this.txtMinRandom.getText())) {
            showAlert("Maksimum Random harus lebih besar daripada Minimum Random", JOptionPane.WARNING_MESSAGE);
            this.txtMinRandom.setText(String.valueOf(param.getMinRandom()));
            this.txtMaxRandom.setText(String.valueOf(param.getMaxRandom()));
        }
    }//GEN-LAST:event_txtMaxRandomFocusLost

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        refreshTableData();
        this.txtBobotAkhir.setText(db.getBobot());
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void txtTesTargetFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTesTargetFocusLost
        String targetDefault = "000001";
        if (this.txtTesTarget.getText().length() != 6) {
            showAlert("Target harus 6 digit", WIDTH);
            this.txtTesTarget.setText(targetDefault);
        } else if (Converter.cekBiner(txtTesTarget.getText())) {
            showAlert("Target harus bilangan biner", WIDTH);
            this.txtTesTarget.setText(targetDefault);
        }
    }//GEN-LAST:event_txtTesTargetFocusLost

    private void btBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBatalActionPerformed
        for (int i = 0; i < listInput.size(); i++) {
            listInput.remove(i);
        }
        this.txtNama.setText("");
        this.btAdd.setEnabled(true);
        this.btRemove.setEnabled(true);
        this.btSave.setEnabled(false);
        this.btBatal.setEnabled(false);
        refreshTableInput();
        counterId = 0;
    }//GEN-LAST:event_btBatalActionPerformed
    public void showAlert(String message, int type) {
        JOptionPane.showMessageDialog(this, message, "Info", JOptionPane.WARNING_MESSAGE);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                    new Main().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btBatal;
    private javax.swing.JButton btBrowse;
    private javax.swing.JButton btRemove;
    private javax.swing.JButton btSave;
    private javax.swing.JButton btTraining;
    private javax.swing.JButton btnBrowseInput;
    private javax.swing.JButton btnBrowseTest;
    private javax.swing.JButton btnClearTes;
    private javax.swing.JButton btnDataHapus;
    private javax.swing.JButton btnRecognize;
    private javax.swing.JButton btnTesTraining;
    private javax.swing.JCheckBox cbDefaultParam;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblProses;
    private javax.swing.JLabel lblSlice1;
    private javax.swing.JLabel lblSlice10;
    private javax.swing.JLabel lblSlice11;
    private javax.swing.JLabel lblSlice12;
    private javax.swing.JLabel lblSlice13;
    private javax.swing.JLabel lblSlice14;
    private javax.swing.JLabel lblSlice15;
    private javax.swing.JLabel lblSlice16;
    private javax.swing.JLabel lblSlice17;
    private javax.swing.JLabel lblSlice18;
    private javax.swing.JLabel lblSlice19;
    private javax.swing.JLabel lblSlice2;
    private javax.swing.JLabel lblSlice3;
    private javax.swing.JLabel lblSlice4;
    private javax.swing.JLabel lblSlice5;
    private javax.swing.JLabel lblSlice6;
    private javax.swing.JLabel lblSlice7;
    private javax.swing.JLabel lblSlice8;
    private javax.swing.JLabel lblSlice9;
    private javax.swing.JPanel pnlDatabase;
    private javax.swing.JPanel pnlGambarInput;
    private javax.swing.JPanel pnlInput;
    private javax.swing.JPanel pnlRecognition;
    private javax.swing.JPanel pnlSlice1;
    private javax.swing.JPanel pnlSlice10;
    private javax.swing.JPanel pnlSlice11;
    private javax.swing.JPanel pnlSlice12;
    private javax.swing.JPanel pnlSlice13;
    private javax.swing.JPanel pnlSlice14;
    private javax.swing.JPanel pnlSlice15;
    private javax.swing.JPanel pnlSlice16;
    private javax.swing.JPanel pnlSlice17;
    private javax.swing.JPanel pnlSlice18;
    private javax.swing.JPanel pnlSlice19;
    private javax.swing.JPanel pnlSlice2;
    private javax.swing.JPanel pnlSlice3;
    private javax.swing.JPanel pnlSlice4;
    private javax.swing.JPanel pnlSlice5;
    private javax.swing.JPanel pnlSlice6;
    private javax.swing.JPanel pnlSlice7;
    private javax.swing.JPanel pnlSlice8;
    private javax.swing.JPanel pnlSlice9;
    private javax.swing.JPanel pnlTes;
    private javax.swing.JPanel pnlTesFuzzy;
    private javax.swing.JPanel pnlTesOri;
    private javax.swing.JPanel pnlTesThinning;
    private javax.swing.JPanel pnlTesThreshold;
    private javax.swing.JTable tblData;
    private javax.swing.JTable tblInput;
    private javax.swing.JTextField txtBobotAkhir;
    private javax.swing.JTextField txtBrowseImage;
    private javax.swing.JTextField txtGambarInput;
    private javax.swing.JTextArea txtHasilRecognition;
    private javax.swing.JTextField txtJmlHiddenLayer;
    private javax.swing.JTextField txtLR;
    private javax.swing.JTextField txtMaxEpoch;
    private javax.swing.JTextField txtMaxRandom;
    private javax.swing.JTextField txtMinRandom;
    private javax.swing.JTextField txtNama;
    private javax.swing.JTextField txtTargetError;
    private javax.swing.JTextField txtTesBrowse;
    private javax.swing.JTextField txtTesTarget;
    // End of variables declaration//GEN-END:variables
}
